{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account/account.component.css","webpack:///./src/app/account/account.component.html","webpack:///./src/app/account/account.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/category/category.component.css","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/entry/entry.component.css","webpack:///./src/app/entry/entry.component.html","webpack:///./src/app/entry/entry.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/method/method.component.css","webpack:///./src/app/method/method.component.html","webpack:///./src/app/method/method.component.ts","webpack:///./src/app/password-validation.ts","webpack:///./src/app/routing/routing.module.ts","webpack:///./src/app/shared/guard/auth.guard.ts","webpack:///./src/app/shared/services/authentication.service.ts","webpack:///./src/app/shared/services/data.service.ts","webpack:///./src/app/shared/services/entries.service.ts","webpack:///./src/app/shared/services/settings.service.ts","webpack:///./src/app/sidebar/sidebar.component.css","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row col-md-10 offset-md-1 custyle\\\">       \\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-md btn-primary float-right\\\" (click)=\\\"openModal(template)\\\" style=\\\"margin-top: 10px;\\\">Add Account <i class=\\\"fa fa-plus\\\"></i></button> \\r\\n    <table class=\\\"table table-striped custab\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Name</th>\\r\\n            <th>isPositive</th>\\r\\n            <th class=\\\"text-center\\\">Action</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n            <tr *ngFor=\\\"let account of accounts \\\">\\r\\n                <td>{{account.id}}</td>\\r\\n                <td>{{account.name}}</td>\\r\\n                <td>{{account.isPositive}}</td>\\r\\n                <td class=\\\"text-center\\\"><a class='btn btn-info btn-xs' href=\\\"#\\\"><span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit</a> <a class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteAccount(account.id)\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span> Del</a></td>\\r\\n            </tr>\\r\\n    </table>\\r\\n    </div>\\r\\n    <ng-template #template>\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title pull-left\\\">Add Account</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                    <form class=\\\"form-signin\\\" [formGroup]=\\\"AddAccountForm\\\" (ngSubmit)=\\\"addAccount(AddAccountForm.value)\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-lg-12\\\">                                 \\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Account Name\\\" required=\\\"\\\" autofocus=\\\"\\\" formControlName=\\\"name\\\"/>                            \\r\\n                            </div>\\r\\n                                    <div class=\\\"col-lg-5 offset-md-1 \\\">                                  \\r\\n                        <input type=\\\"radio\\\" name=\\\"positive\\\" value='1' formControlName=\\\"positive\\\" [(ngModel)]='positive'>True\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-lg-5 offset-md-1\\\">    \\r\\n                        <input type=\\\"radio\\\" name='positive' value='0' formControlName=\\\"positive\\\" [(ngModel)]='positive'>False\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                        \\r\\n                            <hr>\\r\\n                        \\r\\n                            <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!AddAccountForm.valid\\\" (click)=\\\"modalRef.hide()\\\">Create</button>\\r\\n                            \\r\\n                        </form>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n</div>\\r\\n\"","import { SettingsService } from './../shared/services/settings.service';\r\nimport { Component, OnInit, TemplateRef  } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  modalRef: BsModalRef;\r\n  accounts;\r\n  AddAccountForm;\r\n  singleAccount;\r\n\r\n  constructor(private settingService: SettingsService, private modalService: BsModalService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.AddAccountForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      positive: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  getAll(){\r\n    this.settingService.getAllAccount().subscribe((res) => {\r\n     console.log(res)\r\n      this.accounts = res;\r\n    },(error) => {\r\n      console.log(error)\r\n    }); \r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  deleteAccount(id){\r\n    console.log(id)\r\n     let payload = {\r\n      id: id\r\n    }\r\n    this.settingService.deleteAccount(payload).subscribe((res) => {\r\n      console.log(res);\r\n      this.getAll()\r\n     },(error) => {\r\n       console.log(error)\r\n     }); \r\n\r\n  }\r\n\r\n  addAccount(data){\r\n    let payload = {\r\n      name: data.name,\r\n      isPositive: data.positive ===\"1\" ? 1:0\r\n    }\r\n    console.log(payload);\r\n\r\n    this.settingService.createAccount(payload).subscribe((res) => {\r\n      this.accounts.push(res);\r\n      this.singleAccount = res;\r\n     },(error) => {\r\n       console.log(error)\r\n     }); \r\n    \r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<app-header></app-header>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { SettingsService } from './shared/services/settings.service';\r\nimport { EntriesService } from './shared/services/entries.service';\r\nimport { RoutingModule } from './routing/routing.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AlertModule, AlertService } from 'ngx-alerts';\r\nimport { ModalModule } from 'ngx-bootstrap';\r\n\r\n// components\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n// service\r\nimport { DataService } from './shared/services/data.service';\r\nimport { AuthenticationService } from './shared/services/authentication.service';\r\nimport { AuthGuard } from './shared/guard/auth.guard';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { EntryComponent } from './entry/entry.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { MethodComponent } from './method/method.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    EntryComponent,\r\n    CategoryComponent,\r\n    AccountComponent,\r\n    MethodComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    RoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    AlertModule.forRoot({ maxMessages: 5, timeout: 5000 }),\r\n    ModalModule.forRoot()\r\n  ],\r\n  providers: [\r\n    AuthenticationService,\r\n    DataService,\r\n    AlertService,\r\n    AuthGuard,\r\n    EntriesService,\r\n    SettingsService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row col-md-10 offset-md-1 custyle\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-md btn-primary float-right\\\" (click)=\\\"openModal(template)\\\" style=\\\"margin-top: 10px;\\\">Add Category\\r\\n      <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <table class=\\\"table table-striped custab\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>ID</th>\\r\\n          <th>Name</th>\\r\\n          <th>Category</th>\\r\\n          <th class=\\\"text-center\\\">Action</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tr *ngFor=\\\"let category of Categories;let i=index\\\">\\r\\n        <td>{{category.id}}</td>\\r\\n        <td>{{category.name}}</td>\\r\\n        <td>{{category.account}}</td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <a class='btn btn-info btn-xs' href=\\\"#\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit</a>\\r\\n          <a class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteCategory(i)\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\"></span> Del</a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Add Category</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <form class=\\\"form-signin\\\" [formGroup]=\\\"AddCategoryForm\\\" (ngSubmit)=\\\"addCategory(AddCategoryForm.value)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Category Name\\\" required=\\\"\\\" autofocus=\\\"\\\" formControlName=\\\"name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"AccountId\\\" placeholder=\\\"Select Account\\\">\\r\\n              <option *ngFor=\\\"let account of accounts\\\" value=\\\"{{account.id}}\\\">{{account.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <hr>\\r\\n\\r\\n        <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!AddCategoryForm.valid\\\" (click)=\\\"modalRef.hide()\\\">Create</button>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\"","import { SettingsService } from './../shared/services/settings.service';\r\nimport { Component, OnInit, TemplateRef  } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent implements OnInit {\r\n  modalRef: BsModalRef;\r\n  Categories;\r\n  AddCategoryForm;\r\n  singleCategory;\r\n  accounts;\r\n\r\n  constructor(private settingService: SettingsService, private modalService: BsModalService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.AddCategoryForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      AccountId: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  getAll(){\r\n    this.settingService.getAllCategory().subscribe((res) => {\r\n     console.log(res)\r\n      this.Categories = res;\r\n    },(error) => {\r\n      console.log(error)\r\n    });\r\n\r\n    this.settingService.getAllAccount().subscribe((res)=>{\r\n      this.accounts=res;\r\n    });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  deleteCategory(i){\r\n\r\n     let payload = {\r\n      id: this.Categories[i].id\r\n    }\r\n    this.settingService.deleteCategory(payload).subscribe((res) => {\r\n      this.Categories.splice(i,1);\r\n     },(error) => {\r\n       console.log(error)\r\n     });\r\n\r\n  }\r\n\r\n  addCategory(data){\r\n    let payload = {\r\n      name: data.name,\r\n      AccountId: data.AccountId\r\n    }\r\n    console.log(payload);\r\n\r\n    this.settingService.createCategory(payload).subscribe((res) => {\r\n      this.Categories.push(res);\r\n      this.singleCategory = res;\r\n     },(error) => {\r\n       console.log(error)\r\n     });\r\n\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-sidebar></app-sidebar>\\r\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row col-md-10 offset-md-1 custyle\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-md btn-primary float-right\\\" (click)=\\\"openModal(template)\\\" style=\\\"margin-top: 10px;\\\">Add Entry\\r\\n      <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <table class=\\\"table table-striped custab\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>ID</th>\\r\\n          <th>Title/Description</th>\\r\\n          <th>Amount</th>\\r\\n          <th>Account</th>\\r\\n          <th>Category</th>\\r\\n          <th>Method</th>\\r\\n          <th>Date</th>\\r\\n          <th class=\\\"text-center\\\">Action</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tr *ngFor=\\\"let entry of entrys \\\">\\r\\n        <td>{{entry.id}}</td>\\r\\n        <td>{{entry.title}}</td>\\r\\n        <td>{{entry.amount}}</td>\\r\\n        <td>{{entry.category}}</td>\\r\\n        <td>{{entry.account}}</td>\\r\\n        <td>{{entry.method}}</td>\\r\\n        <td>{{entry.createdAt}}</td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <a class='btn btn-info btn-xs' href=\\\"#\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit</a>\\r\\n          <a class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteEntry(entry.id)\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\"></span> Del</a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <form class=\\\"form-signin\\\" [formGroup]=\\\"AddEntryForm\\\" (ngSubmit)=\\\"addEntry(AddEntryForm.value)\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title pull-left\\\">Add Entry</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Entry Title\\\" required=\\\"\\\" autofocus=\\\"\\\" formControlName=\\\"title\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Amount\\\" formControlName=\\\"amount\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"AccountId\\\" placeholder=\\\"Select Account\\\" (change)=\\\"loadCategories(AddEntryForm.value.AccountId)\\\">\\r\\n              <option selected>select category</option>\\r\\n              <option *ngFor=\\\"let account of accounts\\\" value=\\\"{{account.id}}\\\">{{account.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"CategoryId\\\" placeholder=\\\"Select Category\\\" (ngModelChange)=\\\"loadCategories(AddEntryForm.value.AccountId)\\\">\\r\\n              <option *ngFor=\\\"let category of categories\\\" value=\\\"{{category.id}}\\\">{{category.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"MethodId\\\" placeholder=\\\"Select Method\\\">\\r\\n              <option *ngFor=\\\"let method of methods\\\" value=\\\"{{method.id}}\\\">{{method.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!AddEntryForm.valid\\\" (click)=\\\"modalRef.hide()\\\">Create</button>\\r\\n    </form>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\"","import { SettingsService } from './../shared/services/settings.service';\r\nimport { Component, OnInit, TemplateRef  } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { EntriesService } from '../shared/services/entries.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-entry',\r\n  templateUrl: './entry.component.html',\r\n  styleUrls: ['./entry.component.css']\r\n})\r\nexport class EntryComponent implements OnInit {\r\n  modalRef: BsModalRef;\r\n  entrys;\r\n  AddEntryForm;\r\n  singleEntry;\r\n  accounts;\r\n  methods;\r\n  categories;\r\n\r\n  constructor(private settingService: SettingsService,private entryService:EntriesService, private modalService: BsModalService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.AddEntryForm = new FormGroup({\r\n      title: new FormControl('', Validators.required),\r\n      amount: new FormControl('', Validators.required),\r\n      AccountId: new FormControl('', Validators.required),\r\n      CategoryId: new FormControl('', Validators.required),\r\n      MethodId: new FormControl('', Validators.required),\r\n    });\r\n    this.settingService.getAllMethod().subscribe((res)=>{\r\n      this.methods=res;\r\n    });\r\n    this.settingService.getAllAccount().subscribe((res)=>{\r\n      this.accounts=res;\r\n    });\r\n  }\r\n\r\n  loadCategories(id){\r\n    this.settingService.getCategoryByAccount({id}).subscribe((res)=>{\r\n      this.categories=res;\r\n    });\r\n  }\r\n\r\n  getAll(){\r\n    this.entryService.getAll().subscribe((res) => {\r\n     console.log(res)\r\n      this.entrys = res;\r\n    },(error) => {\r\n      console.log(error)\r\n    });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  deleteEntry(id){\r\n    console.log(id)\r\n     let payload = {\r\n      id: id\r\n    }\r\n    this.entryService.delete(payload).subscribe((res) => {\r\n      console.log(res);\r\n      this.getAll()\r\n     },(error) => {\r\n       console.log(error)\r\n     });\r\n\r\n  }\r\n\r\n  addEntry(data){\r\n    let payload = {\r\n      title: data.title,\r\n      amount: data.amount,\r\n      AccountId:data.AccountId,\r\n      CategoryId:data.CategoryId,\r\n      MethodId:data.MethodId\r\n    }\r\n    console.log(payload);\r\n\r\n    this.entryService.create(payload).subscribe((res) => {\r\n      this.entrys.push(res);\r\n      this.singleEntry = res;\r\n     },(error) => {\r\n       console.log(error)\r\n     });\r\n\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Personal Accountant</a>\\r\\n  <button class=\\\"navbar-toggler\\\" data-target=\\\"#navigation\\\" data-control=\\\"navigation\\\" data-toggle=\\\"collapse\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navigation\\\">\\r\\n    <ul class=\\\"nav navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"/home\\\" class=\\\"nav-link\\\">Home</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n      <ul class=\\\"nav navbar-nav ml-auto\\\">\\r\\n      <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"user\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" id=\\\"preview\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{user.name}}</a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-lableledby=\\\"preview\\\">\\r\\n          <a class=\\\"dropdown-item\\\">Profile</a>\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!user\\\">\\r\\n        <a routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Log In</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!user\\\">\\r\\n        <a routerLink=\\\"/signup\\\" class=\\\"nav-link\\\">Sign Up</a>\\r\\n      </li>\\r\\n      <!-- <li class=\\\"nav-item\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"nav-link\\\">Contact Us</a>\\r\\n      </li> -->\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../shared/models/user';\r\nimport { AuthenticationService } from '../shared/services/authentication.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  user: User;\r\n\r\n  constructor(private _authService:AuthenticationService,private route:Router) { }\r\n\r\n  ngOnInit() {\r\n    this._authService.getUser().subscribe((res:User)=>{\r\n      this.user = res;\r\n    })\r\n  }\r\n\r\n  logout(){\r\n    localStorage.clear();\r\n    this._authService.setUser(null);\r\n    this.route.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","module.exports = \".bgImg{\\r\\n  -webkit-filter: blur(1px) !important;\\r\\n          filter: blur(1px) !important;\\r\\n  background-size: cover;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".form-signin {\\r\\n  max-width: 30%;\\r\\n  padding: 15px 35px 45px;\\r\\n  margin: 0 auto;\\r\\n  background-color: rgba(255, 255, 255, 0.7);\\r\\n  border-radius: 5px 5px 5px 5px;\\r\\n}\\r\\n\"","module.exports = \"<ngx-alerts></ngx-alerts>\\r\\n<div class=\\\"wrapper\\\">\\r\\n    <form class=\\\"form-signin\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginUser(loginForm.value)\\\">\\r\\n      <h2 class=\\\"form-signin-heading text-center\\\">Login</h2>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" placeholder=\\\"Email Address\\\" required=\\\"\\\" autofocus=\\\"\\\" formControlName=\\\"email\\\"\\r\\n      />\\r\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required=\\\"\\\" formControlName=\\\"password\\\"\\r\\n      />\\r\\n      <!-- <p class=\\\"text-center\\\" style=\\\"color: red\\\">{{errMessage}}</p> -->\\r\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n        <br>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-link \\\" style=\\\"background-color: white;\\\" (click)=\\\"signUpFormOpen()\\\">Register Your Self</button>\\r\\n      </form>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from 'ngx-alerts';\r\nimport { AuthenticationService } from '../shared/services/authentication.service';\r\nimport { User } from '../shared/models/user';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  userlogin_response;\r\n  errMessage;\r\n\r\n  constructor(private route: Router, private authenticationService: AuthenticationService, private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.pattern(\"[^ @]*@[^ @]*\")]),\r\n      password: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  loginUser(user) {\r\n\r\n    let payload = {\r\n      email: user.email,\r\n      password: user.password\r\n    };\r\n    console.log(payload);\r\n    this.authenticationService.loginUser(payload)\r\n      .subscribe(\r\n        (res:User) => {\r\n            this.userlogin_response = res;\r\n            localStorage.setItem('userInfo', JSON.stringify(this.userlogin_response));\r\n            this.authenticationService.setUser(res);\r\n            localStorage.setItem('isLoggedin', 'true');\r\n            this.alertService.success('Login SuccesFull');\r\n            this.route.navigate(['/dashboard']);\r\n        },\r\n        err => {\r\n          this.errMessage = err['error'].message;\r\n          this.alertService.danger(err['error'].message);\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  signUpFormOpen(){\r\n    this.route.navigate(['/signup'])\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row col-md-10 offset-md-1 custyle\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-md btn-primary float-right\\\" (click)=\\\"openModal(template)\\\" style=\\\"margin-top: 10px;\\\">Add Method\\r\\n      <i class=\\\"fa fa-plus\\\"></i>\\r\\n    </button>\\r\\n    <table class=\\\"table table-striped custab\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>ID</th>\\r\\n          <th>Name</th>\\r\\n          <th>Type</th>\\r\\n          <th class=\\\"text-center\\\">Action</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tr *ngFor=\\\"let method of methods \\\">\\r\\n        <td>{{method.id}}</td>\\r\\n        <td>{{method.name}}</td>\\r\\n        <td>{{method.type}}</td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <a class='btn btn-info btn-xs' href=\\\"#\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit</a>\\r\\n          <a class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteMethod(method.id)\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\"></span> Del</a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  <ng-template #template>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Add Method</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <form class=\\\"form-signin\\\" [formGroup]=\\\"AddMethodForm\\\" (ngSubmit)=\\\"addMethod(AddMethodForm.value)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-12\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Method Name\\\" required=\\\"\\\" autofocus=\\\"\\\" formControlName=\\\"name\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-12 offset-md-1 \\\">\\r\\n            <input formControlName=\\\"type\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <hr>\\r\\n\\r\\n        <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!AddMethodForm.valid\\\" (click)=\\\"modalRef.hide()\\\">Create</button>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\"","import { SettingsService } from './../shared/services/settings.service';\r\nimport { Component, OnInit, TemplateRef  } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-method',\r\n  templateUrl: './method.component.html',\r\n  styleUrls: ['./method.component.css']\r\n})\r\nexport class MethodComponent implements OnInit {\r\n  modalRef: BsModalRef;\r\n  methods;\r\n  AddMethodForm;\r\n  singleMethod;\r\n\r\n  constructor(private settingService: SettingsService, private modalService: BsModalService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n    this.AddMethodForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      type: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  getAll(){\r\n    this.settingService.getAllMethod().subscribe((res) => {\r\n     console.log(res)\r\n      this.methods = res;\r\n    },(error) => {\r\n      console.log(error)\r\n    });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  deleteMethod(id){\r\n    console.log(id)\r\n     let payload = {\r\n      id: id\r\n    }\r\n    this.settingService.deleteMethod(payload).subscribe((res) => {\r\n      console.log(res);\r\n      this.getAll()\r\n     },(error) => {\r\n       console.log(error)\r\n     });\r\n\r\n  }\r\n\r\n  addMethod(data){\r\n    let payload = {\r\n      name: data.name,\r\n      type: data.type\r\n    }\r\n\r\n    this.settingService.createMethod(payload).subscribe((res) => {\r\n      this.methods.push(res);\r\n      this.singleMethod = res;\r\n     },(error) => {\r\n       console.log(error)\r\n     });\r\n\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class PasswordValidation {\r\n\r\n    static MatchPassword(AC: AbstractControl) {\r\n        let password = AC.get('password').value; // to get value in input tag\r\n        let confirmPassword = AC.get('confirmPassword').value; // to get value in input tag\r\n        if (password != confirmPassword) {\r\n            // console.log('false');\r\n            AC.get('confirmPassword').setErrors({ MatchPassword: true })\r\n        } else {\r\n            // console.log('true');\r\n            return null\r\n        }\r\n    }\r\n}","import { MethodComponent } from \"./../method/method.component\";\r\nimport { AccountComponent } from \"./../account/account.component\";\r\nimport { CategoryComponent } from \"./../category/category.component\";\r\nimport { EntryComponent } from \"./../entry/entry.component\";\r\nimport { AuthGuard } from \"./../shared/guard/auth.guard\";\r\nimport { DashboardComponent } from \"./../dashboard/dashboard.component\";\r\nimport { SignupComponent } from \"./../signup/signup.component\";\r\nimport { LoginComponent } from \"./../login/login.component\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { NgModule, Component } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HomeComponent } from \"./../home/home.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"home\", component: HomeComponent },\r\n  {\r\n    path: \"dashboard\",\r\n    component: DashboardComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: \"entry\",\r\n        component: EntryComponent\r\n      },\r\n      {\r\n        path: \"category\",\r\n        component: CategoryComponent\r\n      },\r\n      {\r\n        path: \"account\",\r\n        component: AccountComponent\r\n      },\r\n      {\r\n        path: \"method\",\r\n        component: MethodComponent\r\n      }\r\n    ]\r\n  },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"signup\", component: SignupComponent },\r\n  { path: \"**\", redirectTo: \"home\" }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router) {}\r\n\r\n    canActivate() {\r\n        if (localStorage.getItem('isLoggedin')) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}","import { DataService } from './data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  loggedIn = false;\r\n  user = new BehaviorSubject<User>(null);\r\n  constructor(private dataService : DataService) { }\r\n\r\n  loginUser(payload) {\r\n    return this.dataService.loginUser(payload);\r\n  }\r\n  getUser(){\r\n    return this.user.asObservable();\r\n  }\r\n  setUser(user:User){\r\n    this.user.next(user);\r\n  }\r\n  registerUser(payload) {\r\n    return this.dataService.registerUser(payload);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  baseUrl = \"/api/\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // authentication\r\n  loginUser(payload) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.baseUrl + 'login', payload);\r\n  }\r\n  registerUser(payload) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.baseUrl + 'user', payload);\r\n  }\r\n\r\n  //accounts\r\n\r\n  createAccount(payload) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.baseUrl + 'account', payload);\r\n  }\r\n\r\n  deleteAccount(payload){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.delete(`${this.baseUrl}account/${payload.id}`);\r\n  }\r\n\r\n  updateAccount(payload){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put(this.baseUrl + 'account', payload);\r\n  }\r\n\r\n  getAllAccount(){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.baseUrl + 'account');\r\n  }\r\n\r\n  //categories\r\n\r\n  createCategory(payload) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.baseUrl + 'category', payload);\r\n  }\r\n\r\n  deleteCategory(payload){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.delete(`${this.baseUrl}category/${payload.id}`);\r\n  }\r\n\r\n  updateCategory(payload){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put(this.baseUrl + 'category', payload);\r\n  }\r\n\r\n  getAllCategory(){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.baseUrl + 'category');\r\n  }\r\n  getCategoryByAccount(payload){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.baseUrl}category/${payload.id}`);\r\n  }\r\n\r\n  //methods\r\n\r\n  createMethod(payload) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.baseUrl + 'method', payload);\r\n  }\r\n\r\n  deleteMethod(payload){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.delete(`${this.baseUrl}method/${payload.id}`);\r\n  }\r\n\r\n  updateMethod(payload){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put(this.baseUrl + 'method', payload);\r\n  }\r\n\r\n  getAllMethod(){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.baseUrl + 'method');\r\n  }\r\n\r\n  //entry\r\n\r\n  createEntry(payload) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(this.baseUrl + 'entry', payload);\r\n  }\r\n\r\n  deleteEntry(payload){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.delete(this.baseUrl + 'entry', payload);\r\n  }\r\n\r\n  updateEntry(payload){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.put(this.baseUrl + 'entry', payload);\r\n  }\r\n\r\n  getAllEntry(){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(this.baseUrl + 'entry');\r\n  }\r\n}\r\n","import { DataService } from './data.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntriesService {\r\n\r\n  constructor(private dataService : DataService) { }\r\n\r\n  create(payload){\r\n    return this.dataService.createEntry(payload);\r\n  }\r\n  update(payload){\r\n    return this.dataService.updateEntry(payload);\r\n  }\r\n  delete(payload){\r\n    return this.dataService.deleteEntry(payload);\r\n  }\r\n  getAll(){\r\n    return this.dataService.getAllEntry();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DataService } from './data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService {\r\n\r\n\r\n  constructor(private dataService : DataService) { }\r\n\r\n  //category\r\n\r\n  createCategory(payload){\r\n    return this.dataService.createCategory(payload);\r\n  }\r\n  updateCategory(payload){\r\n    return this.dataService.updateCategory(payload);\r\n  }\r\n  deleteCategory(payload){\r\n    return this.dataService.deleteCategory(payload);\r\n  }\r\n  getAllCategory(){\r\n    return this.dataService.getAllCategory();\r\n  }\r\n  getCategoryByAccount(payload){\r\n    return this.dataService.getCategoryByAccount(payload);\r\n  }\r\n\r\n  //method\r\n\r\n  createMethod(payload){\r\n    return this.dataService.createMethod(payload);\r\n  }\r\n  updateMethod(payload){\r\n    return this.dataService.updateMethod(payload);\r\n  }\r\n  deleteMethod(payload){\r\n    return this.dataService.deleteMethod(payload);\r\n  }\r\n  getAllMethod(){\r\n    return this.dataService.getAllMethod();\r\n  }\r\n\r\n  //account\r\n\r\n  createAccount(payload){\r\n    return this.dataService.createAccount(payload);\r\n  }\r\n  updateAccount(payload){\r\n    return this.dataService.updateAccount(payload);\r\n  }\r\n  deleteAccount(payload){\r\n    return this.dataService.deleteAccount(payload);\r\n  }\r\n  getAllAccount(){\r\n    return this.dataService.getAllAccount();\r\n  }\r\n\r\n}\r\n","module.exports = \".sidenav {\\r\\n    height: 100%;\\r\\n    width: 200px;\\r\\n    position: fixed;\\r\\n    z-index: 1;\\r\\n    top: 56px;\\r\\n    left: -3px;\\r\\n    background-color: #343a40;\\r\\n    overflow-x: hidden;\\r\\n    padding-top: 20px;\\r\\n}\\r\\n\\r\\n.sidebar-nav {\\r\\n    margin: 0;\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.sidebar-nav li {\\r\\n    position: relative; \\r\\n    line-height: 20px;\\r\\n    display: inline-block;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.sidebar-nav li:before {\\r\\n    content: '';\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    z-index: -1;\\r\\n    height: 100%;\\r\\n    width: 3px;\\r\\n    background-color: #1c1c1c;\\r\\n    transition: width .2s ease-in;\\r\\n\\r\\n}\\r\\n\\r\\n.sidebar-nav li:hover:before,\\r\\n.sidebar-nav li.open:hover:before {\\r\\n    width: 100%;\\r\\n    transition: width .2s ease-in;\\r\\n\\r\\n}\\r\\n\\r\\n.sidebar-nav li a {\\r\\n    display: block;\\r\\n    color: #ddd;\\r\\n    text-decoration: none;\\r\\n    padding: 10px 15px 10px 30px;    \\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\n.sidebar-nav li a:hover,\\r\\n.sidebar-nav li a:active,\\r\\n.sidebar-nav li a:focus,\\r\\n.sidebar-nav li.open a:hover,\\r\\n.sidebar-nav li.open a:active,\\r\\n.sidebar-nav li.open a:focus{\\r\\n    color: #fff;\\r\\n    text-decoration: none;\\r\\n    background-color: transparent;\\r\\n}\\r\\n\\r\\n.sidebar-nav > .sidebar-brand {\\r\\n    height: 65px;\\r\\n    font-size: 20px;\\r\\n    line-height: 44px;\\r\\n}\\r\\n\\r\\n.sidebar-nav .dropdown-menu {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    border-radius: 0;\\r\\n    border: none;\\r\\n    background-color: #222;\\r\\n    box-shadow: none;\\r\\n}\\r\\n\\r\\n.sidenav a {\\r\\n    padding: 6px 8px 6px 16px;\\r\\n    text-decoration: none;\\r\\n    font-size: 20px;\\r\\n    color: #818181;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.sidenav a:hover {\\r\\n    color: #f1f1f1;\\r\\n}\\r\\n\\r\\n.main {\\r\\n    margin-left: 160px; /* Same as the width of the sidenav */\\r\\n    font-size: 28px; /* Increased text to enable scrolling */\\r\\n    padding: 0px 10px;\\r\\n}\\r\\n\\r\\n@media screen and (max-height: 450px) {\\r\\n    .sidenav {padding-top: 15px;}\\r\\n    .sidenav a {font-size: 18px;}\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"sidenav\\\">\\r\\n    <ul class=\\\"nav sidebar-nav\\\">\\r\\n        <li class=\\\"sidebar-brand\\\">\\r\\n            <a [routerLink]=\\\"['entry']\\\" style=\\\"font-size: 20px;\\\">\\r\\n               Entry\\r\\n            </a>\\r\\n        </li>\\r\\n        <li class=\\\"dropdown\\\">\\r\\n          <a  class=\\\"dropdown-toggle\\\" (click)=\\\"stopPropogate($event)\\\" data-toggle=\\\"dropdown\\\" style=\\\"font-size: 20px;\\\" [routerLink]=\\\"['category']\\\">Settings <span class=\\\"caret\\\"></span></a>\\r\\n          <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n            <li class=\\\"sidebar-brand\\\"><a [routerLink]=\\\"['category']\\\">Category</a></li>\\r\\n            <li><a [routerLink]=\\\"['account']\\\">Account</a></li>\\r\\n            <li><a [routerLink]=\\\"['method']\\\">Method</a></li>\\r\\n          </ul>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  stopPropogate(e){\r\n    console.log(e)\r\n    e.preventDefault();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper container\\\">\\r\\n  <form class=\\\"form-signin\\\" [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"registerUser(signupForm.value)\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <h2 class=\\\"form-signin-heading text-center\\\">Welcome aboard!</h2>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Your Name\\\" required=\\\"\\\" autofocus=\\\"\\\" formControlName=\\\"name\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userame\\\" placeholder=\\\" User Name\\\" required=\\\"\\\" autofocus=\\\"\\\" formControlName=\\\"username\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email Address\\\" required=\\\"\\\" formControlName=\\\"email\\\" />\\r\\n          </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required=\\\"\\\" formControlName=\\\"password\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\" required=\\\"\\\" formControlName=\\\"confirmPassword\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12\\\">\\r\\n        <div [hidden]=\\\"signupForm.controls.confirmPassword.valid || signupForm.controls.confirmPassword.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n          Password mismatch\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12\\\">\\r\\n          <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!signupForm.valid\\\">Signup</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <p>Already Have a Account?\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-link \\\" style=\\\"background-color: white; margin-top: -6px;\\\" (click)=\\\"logInFormOpen()\\\">Login.</button>\\r\\n    </p>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { AlertService } from 'ngx-alerts';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { PasswordValidation } from './../password-validation';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../shared/services/authentication.service';\r\nimport { User } from '../shared/models/user';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signupForm: FormGroup;\r\n\r\n  constructor(private router: Router, private authenticationService: AuthenticationService, private alertService: AlertService ) { }\r\n\r\n  ngOnInit() {\r\n    this.signupForm = new FormGroup({\r\n      name: new FormControl('', Validators.required),\r\n      username: new FormControl('', Validators.required),\r\n      email: new FormControl('', [Validators.required, Validators.pattern(\"[^ @]*@[^ @]*\")]),\r\n      password: new FormControl('', Validators.required),\r\n      confirmPassword: new FormControl('', Validators.required),\r\n    }, PasswordValidation.MatchPassword);\r\n  }\r\n  passwordMatchValidator = function (signupForm: FormGroup) {\r\n    return signupForm.get('password').value === signupForm.get('confirmPassword').value ? null : { 'mismatch': true };\r\n  }\r\n\r\n  registerUser(user) {\r\n    let payload = {\r\n      name: user.name,\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password\r\n    };\r\n    // console.log(payload);\r\n    this.authenticationService.registerUser(payload)\r\n      .subscribe(\r\n        (res:User)=> {\r\n          console.log(res, 'api');\r\n          // this.alertService.success(res['msg']);\r\n          this.router.navigate(['/login']);\r\n        },\r\n        err => {\r\n          console.log(err, 'api');\r\n          this.alertService.danger(err['error'].message);\r\n        }\r\n      );\r\n  }\r\n\r\n  logInFormOpen(){\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}